/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.kodowanie_dekodowanie;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author musialantoni
 */
public class Kodowanie_dekodowanie extends javax.swing.JFrame {

    File file = new File("tajne.txt");
    char[] alfabet = new char[26];
    char Zakodowany_tekst_Tab;
    char Odkodowany_tekst_Tab;
    Scanner scanner;
    String linia1;
    String Zakodowany_tekst;
    /**
     * Creates new form Kodowanie_dekodowanie
     */
    public Kodowanie_dekodowanie() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jP_All = new javax.swing.JPanel();
        jTB1 = new javax.swing.JTabbedPane();
        jP_Kodowanie = new javax.swing.JPanel();
        jP_Kodowanie_Buttons = new javax.swing.JPanel();
        jB_Kodowanie_Buttons_Zakoduj = new javax.swing.JButton();
        jB_Kodowanie_Buttons_Zapisz = new javax.swing.JButton();
        jB_Kodowanie_Buttons_Wyczyść1 = new javax.swing.JButton();
        jP_Kodowanie_Zakodowanytekst = new javax.swing.JPanel();
        jL_Kodowanie_Zakodowanytekst_Text = new javax.swing.JLabel();
        jSP_Kodowanie_Tekst_Do_Zakodowania = new javax.swing.JScrollPane();
        jTA_Kodowanie_Tekst_Do_Zakodowania_Text = new javax.swing.JTextArea();
        jSP_Kodowanie_Zakodowany_Tekst = new javax.swing.JScrollPane();
        jTA_Kodowanie_Zakodowany_Tekst_Text = new javax.swing.JTextArea();
        jP_Dekodowanie = new javax.swing.JPanel();
        jP_Dekodowanie_Buttons = new javax.swing.JPanel();
        jB_Dekodowanie_Buttons_Odkoduj = new javax.swing.JButton();
        jB_Dekodowanie_Buttons_Wczytaj = new javax.swing.JButton();
        jB_Dekodowanie_Buttons_Wyczysc2 = new javax.swing.JButton();
        jP_Dekodowanie_Odkodowanytekst = new javax.swing.JPanel();
        jL_Dekodowanie_Odkodowanytekst_Text = new javax.swing.JLabel();
        jSP_Dekodowanie_Tekst_Do_Odkodowania = new javax.swing.JScrollPane();
        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text = new javax.swing.JTextArea();
        jSP_Dekodowanie_Odkodowany_Tekst = new javax.swing.JScrollPane();
        jTA_Dekodowanie_Odkodowany_Tekst_Text = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kodowanie i Dekodowanie");
        setResizable(false);

        jP_All.setBackground(java.awt.Color.darkGray);

        jTB1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jP_Kodowanie.setBackground(java.awt.Color.darkGray);
        jP_Kodowanie.setForeground(java.awt.Color.white);
        jP_Kodowanie.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jP_Kodowanie_Buttons.setBackground(java.awt.Color.darkGray);
        jP_Kodowanie_Buttons.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jB_Kodowanie_Buttons_Zakoduj.setBackground(java.awt.Color.darkGray);
        jB_Kodowanie_Buttons_Zakoduj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jB_Kodowanie_Buttons_Zakoduj.setForeground(java.awt.Color.white);
        jB_Kodowanie_Buttons_Zakoduj.setText("Zakoduj");
        jB_Kodowanie_Buttons_Zakoduj.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        jB_Kodowanie_Buttons_Zakoduj.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jB_Kodowanie_Buttons_Zakoduj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Kodowanie_Buttons_ZakodujActionPerformed(evt);
            }
        });

        jB_Kodowanie_Buttons_Zapisz.setBackground(java.awt.Color.darkGray);
        jB_Kodowanie_Buttons_Zapisz.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jB_Kodowanie_Buttons_Zapisz.setForeground(java.awt.Color.white);
        jB_Kodowanie_Buttons_Zapisz.setText("Zapisz");
        jB_Kodowanie_Buttons_Zapisz.setToolTipText("");
        jB_Kodowanie_Buttons_Zapisz.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        jB_Kodowanie_Buttons_Zapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Kodowanie_Buttons_ZapiszActionPerformed(evt);
            }
        });

        jB_Kodowanie_Buttons_Wyczyść1.setBackground(java.awt.Color.darkGray);
        jB_Kodowanie_Buttons_Wyczyść1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jB_Kodowanie_Buttons_Wyczyść1.setForeground(java.awt.Color.white);
        jB_Kodowanie_Buttons_Wyczyść1.setText("Wyczyść");
        jB_Kodowanie_Buttons_Wyczyść1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        jB_Kodowanie_Buttons_Wyczyść1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Kodowanie_Buttons_Wyczyść1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jP_Kodowanie_ButtonsLayout = new javax.swing.GroupLayout(jP_Kodowanie_Buttons);
        jP_Kodowanie_Buttons.setLayout(jP_Kodowanie_ButtonsLayout);
        jP_Kodowanie_ButtonsLayout.setHorizontalGroup(
            jP_Kodowanie_ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_Kodowanie_ButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jB_Kodowanie_Buttons_Zakoduj, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jB_Kodowanie_Buttons_Wyczyść1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jB_Kodowanie_Buttons_Zapisz, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jP_Kodowanie_ButtonsLayout.setVerticalGroup(
            jP_Kodowanie_ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jP_Kodowanie_ButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_Kodowanie_ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jB_Kodowanie_Buttons_Zakoduj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jB_Kodowanie_Buttons_Zapisz, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jB_Kodowanie_Buttons_Wyczyść1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jP_Kodowanie_Zakodowanytekst.setBackground(java.awt.Color.darkGray);
        jP_Kodowanie_Zakodowanytekst.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jL_Kodowanie_Zakodowanytekst_Text.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jL_Kodowanie_Zakodowanytekst_Text.setForeground(java.awt.Color.white);
        jL_Kodowanie_Zakodowanytekst_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_Kodowanie_Zakodowanytekst_Text.setText("Zakodowany tekst");

        javax.swing.GroupLayout jP_Kodowanie_ZakodowanytekstLayout = new javax.swing.GroupLayout(jP_Kodowanie_Zakodowanytekst);
        jP_Kodowanie_Zakodowanytekst.setLayout(jP_Kodowanie_ZakodowanytekstLayout);
        jP_Kodowanie_ZakodowanytekstLayout.setHorizontalGroup(
            jP_Kodowanie_ZakodowanytekstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_Kodowanie_ZakodowanytekstLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jL_Kodowanie_Zakodowanytekst_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jP_Kodowanie_ZakodowanytekstLayout.setVerticalGroup(
            jP_Kodowanie_ZakodowanytekstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_Kodowanie_ZakodowanytekstLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jL_Kodowanie_Zakodowanytekst_Text, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSP_Kodowanie_Tekst_Do_Zakodowania.setBackground(java.awt.Color.darkGray);
        jSP_Kodowanie_Tekst_Do_Zakodowania.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jTA_Kodowanie_Tekst_Do_Zakodowania_Text.setBackground(java.awt.Color.darkGray);
        jTA_Kodowanie_Tekst_Do_Zakodowania_Text.setColumns(20);
        jTA_Kodowanie_Tekst_Do_Zakodowania_Text.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTA_Kodowanie_Tekst_Do_Zakodowania_Text.setForeground(java.awt.Color.white);
        jTA_Kodowanie_Tekst_Do_Zakodowania_Text.setRows(5);
        jTA_Kodowanie_Tekst_Do_Zakodowania_Text.setMargin(new java.awt.Insets(7, 7, 7, 7));
        jSP_Kodowanie_Tekst_Do_Zakodowania.setViewportView(jTA_Kodowanie_Tekst_Do_Zakodowania_Text);

        jSP_Kodowanie_Zakodowany_Tekst.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jTA_Kodowanie_Zakodowany_Tekst_Text.setEditable(false);
        jTA_Kodowanie_Zakodowany_Tekst_Text.setBackground(java.awt.Color.darkGray);
        jTA_Kodowanie_Zakodowany_Tekst_Text.setColumns(20);
        jTA_Kodowanie_Zakodowany_Tekst_Text.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTA_Kodowanie_Zakodowany_Tekst_Text.setForeground(java.awt.Color.white);
        jTA_Kodowanie_Zakodowany_Tekst_Text.setRows(5);
        jTA_Kodowanie_Zakodowany_Tekst_Text.setMargin(new java.awt.Insets(7, 7, 7, 7));
        jSP_Kodowanie_Zakodowany_Tekst.setViewportView(jTA_Kodowanie_Zakodowany_Tekst_Text);

        javax.swing.GroupLayout jP_KodowanieLayout = new javax.swing.GroupLayout(jP_Kodowanie);
        jP_Kodowanie.setLayout(jP_KodowanieLayout);
        jP_KodowanieLayout.setHorizontalGroup(
            jP_KodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_KodowanieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_KodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSP_Kodowanie_Tekst_Do_Zakodowania)
                    .addComponent(jP_Kodowanie_Buttons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(jP_KodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jP_Kodowanie_Zakodowanytekst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSP_Kodowanie_Zakodowany_Tekst, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                .addContainerGap())
        );
        jP_KodowanieLayout.setVerticalGroup(
            jP_KodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_KodowanieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_KodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jP_Kodowanie_Zakodowanytekst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jP_Kodowanie_Buttons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jP_KodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSP_Kodowanie_Tekst_Do_Zakodowania, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addComponent(jSP_Kodowanie_Zakodowany_Tekst))
                .addContainerGap())
        );

        jTB1.addTab("Kodowanie", jP_Kodowanie);

        jP_Dekodowanie.setBackground(java.awt.Color.darkGray);
        jP_Dekodowanie.setForeground(java.awt.Color.white);
        jP_Dekodowanie.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jP_Dekodowanie_Buttons.setBackground(java.awt.Color.darkGray);
        jP_Dekodowanie_Buttons.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jB_Dekodowanie_Buttons_Odkoduj.setBackground(java.awt.Color.darkGray);
        jB_Dekodowanie_Buttons_Odkoduj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jB_Dekodowanie_Buttons_Odkoduj.setForeground(java.awt.Color.white);
        jB_Dekodowanie_Buttons_Odkoduj.setText("Odkoduj");
        jB_Dekodowanie_Buttons_Odkoduj.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        jB_Dekodowanie_Buttons_Odkoduj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Dekodowanie_Buttons_OdkodujActionPerformed(evt);
            }
        });

        jB_Dekodowanie_Buttons_Wczytaj.setBackground(java.awt.Color.darkGray);
        jB_Dekodowanie_Buttons_Wczytaj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jB_Dekodowanie_Buttons_Wczytaj.setForeground(java.awt.Color.white);
        jB_Dekodowanie_Buttons_Wczytaj.setText("Wczytaj");
        jB_Dekodowanie_Buttons_Wczytaj.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        jB_Dekodowanie_Buttons_Wczytaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Dekodowanie_Buttons_WczytajActionPerformed(evt);
            }
        });

        jB_Dekodowanie_Buttons_Wyczysc2.setBackground(java.awt.Color.darkGray);
        jB_Dekodowanie_Buttons_Wyczysc2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jB_Dekodowanie_Buttons_Wyczysc2.setForeground(java.awt.Color.white);
        jB_Dekodowanie_Buttons_Wyczysc2.setText("Wyczyść");
        jB_Dekodowanie_Buttons_Wyczysc2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        jB_Dekodowanie_Buttons_Wyczysc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Dekodowanie_Buttons_Wyczysc2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jP_Dekodowanie_ButtonsLayout = new javax.swing.GroupLayout(jP_Dekodowanie_Buttons);
        jP_Dekodowanie_Buttons.setLayout(jP_Dekodowanie_ButtonsLayout);
        jP_Dekodowanie_ButtonsLayout.setHorizontalGroup(
            jP_Dekodowanie_ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_Dekodowanie_ButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jB_Dekodowanie_Buttons_Odkoduj, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jB_Dekodowanie_Buttons_Wyczysc2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jB_Dekodowanie_Buttons_Wczytaj, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jP_Dekodowanie_ButtonsLayout.setVerticalGroup(
            jP_Dekodowanie_ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jP_Dekodowanie_ButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_Dekodowanie_ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jB_Dekodowanie_Buttons_Odkoduj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jB_Dekodowanie_Buttons_Wczytaj, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jB_Dekodowanie_Buttons_Wyczysc2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jP_Dekodowanie_Odkodowanytekst.setBackground(java.awt.Color.darkGray);
        jP_Dekodowanie_Odkodowanytekst.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jL_Dekodowanie_Odkodowanytekst_Text.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jL_Dekodowanie_Odkodowanytekst_Text.setForeground(java.awt.Color.white);
        jL_Dekodowanie_Odkodowanytekst_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_Dekodowanie_Odkodowanytekst_Text.setText("Odkodowany tekst");

        javax.swing.GroupLayout jP_Dekodowanie_OdkodowanytekstLayout = new javax.swing.GroupLayout(jP_Dekodowanie_Odkodowanytekst);
        jP_Dekodowanie_Odkodowanytekst.setLayout(jP_Dekodowanie_OdkodowanytekstLayout);
        jP_Dekodowanie_OdkodowanytekstLayout.setHorizontalGroup(
            jP_Dekodowanie_OdkodowanytekstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_Dekodowanie_OdkodowanytekstLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jL_Dekodowanie_Odkodowanytekst_Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jP_Dekodowanie_OdkodowanytekstLayout.setVerticalGroup(
            jP_Dekodowanie_OdkodowanytekstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_Dekodowanie_OdkodowanytekstLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jL_Dekodowanie_Odkodowanytekst_Text, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSP_Dekodowanie_Tekst_Do_Odkodowania.setBackground(java.awt.Color.darkGray);
        jSP_Dekodowanie_Tekst_Do_Odkodowania.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setBackground(java.awt.Color.darkGray);
        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setColumns(20);
        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setForeground(java.awt.Color.white);
        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setRows(5);
        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setMargin(new java.awt.Insets(7, 7, 7, 7));
        jSP_Dekodowanie_Tekst_Do_Odkodowania.setViewportView(jTA_Dekodowanie_Tekst_Do_Odkodowania_Text);

        jSP_Dekodowanie_Odkodowany_Tekst.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        jTA_Dekodowanie_Odkodowany_Tekst_Text.setEditable(false);
        jTA_Dekodowanie_Odkodowany_Tekst_Text.setBackground(java.awt.Color.darkGray);
        jTA_Dekodowanie_Odkodowany_Tekst_Text.setColumns(20);
        jTA_Dekodowanie_Odkodowany_Tekst_Text.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTA_Dekodowanie_Odkodowany_Tekst_Text.setForeground(java.awt.Color.white);
        jTA_Dekodowanie_Odkodowany_Tekst_Text.setRows(5);
        jTA_Dekodowanie_Odkodowany_Tekst_Text.setMargin(new java.awt.Insets(7, 7, 7, 7));
        jSP_Dekodowanie_Odkodowany_Tekst.setViewportView(jTA_Dekodowanie_Odkodowany_Tekst_Text);

        javax.swing.GroupLayout jP_DekodowanieLayout = new javax.swing.GroupLayout(jP_Dekodowanie);
        jP_Dekodowanie.setLayout(jP_DekodowanieLayout);
        jP_DekodowanieLayout.setHorizontalGroup(
            jP_DekodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_DekodowanieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_DekodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSP_Dekodowanie_Tekst_Do_Odkodowania)
                    .addComponent(jP_Dekodowanie_Buttons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(jP_DekodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jP_Dekodowanie_Odkodowanytekst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSP_Dekodowanie_Odkodowany_Tekst, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                .addContainerGap())
        );
        jP_DekodowanieLayout.setVerticalGroup(
            jP_DekodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_DekodowanieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_DekodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jP_Dekodowanie_Odkodowanytekst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jP_Dekodowanie_Buttons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jP_DekodowanieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSP_Dekodowanie_Tekst_Do_Odkodowania, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .addComponent(jSP_Dekodowanie_Odkodowany_Tekst))
                .addContainerGap())
        );

        jTB1.addTab("Dekodowanie", jP_Dekodowanie);

        javax.swing.GroupLayout jP_AllLayout = new javax.swing.GroupLayout(jP_All);
        jP_All.setLayout(jP_AllLayout);
        jP_AllLayout.setHorizontalGroup(
            jP_AllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTB1)
        );
        jP_AllLayout.setVerticalGroup(
            jP_AllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTB1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jP_All, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jP_All, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jB_Kodowanie_Buttons_Wyczyść1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Kodowanie_Buttons_Wyczyść1ActionPerformed
        // TODO add your handling code here:
        jTA_Kodowanie_Tekst_Do_Zakodowania_Text.setText("");
        jTA_Kodowanie_Zakodowany_Tekst_Text.setText("");
    }//GEN-LAST:event_jB_Kodowanie_Buttons_Wyczyść1ActionPerformed

    private void jB_Dekodowanie_Buttons_Wyczysc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Dekodowanie_Buttons_Wyczysc2ActionPerformed
        // TODO add your handling code here:
        jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setText("");
        jTA_Dekodowanie_Odkodowany_Tekst_Text.setText("");
    }//GEN-LAST:event_jB_Dekodowanie_Buttons_Wyczysc2ActionPerformed

    private void jB_Kodowanie_Buttons_ZakodujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Kodowanie_Buttons_ZakodujActionPerformed
        // TODO add your handling code here:
        Zakodowany_tekst = jTA_Kodowanie_Tekst_Do_Zakodowania_Text.getText();
        
        
            alfabet[0] = 'a';
            alfabet[1] = 'b';
            alfabet[2] = 'c';
            alfabet[3] = 'd';
            alfabet[4] = 'e';
            alfabet[5] = 'f';
            alfabet[6] = 'g';
            alfabet[7] = 'h';
            alfabet[8] = 'i';
            alfabet[9] = 'j';
            alfabet[10] = 'k';
            alfabet[11] = 'l';
            alfabet[12] = 'm';
            alfabet[13] = 'n';
            alfabet[14] = 'o';
            alfabet[15] = 'p';
            alfabet[16] = 'q';
            alfabet[17] = 'r';
            alfabet[18] = 's';
            alfabet[19] = 't';
            alfabet[20] = 'u';
            alfabet[21] = 'v';
            alfabet[22] = 'w';
            alfabet[23] = 'x';
            alfabet[24] = 'y';
            alfabet[25] = 'z';
            
        char[] charsFromString = Zakodowany_tekst.toCharArray();
        
        for (int i = 0; i <= (Zakodowany_tekst.length() - 1); i++) {
            Zakodowany_tekst_Tab = charsFromString[i];
            
            
            if (Zakodowany_tekst_Tab == alfabet[0]) {
                Zakodowany_tekst_Tab = 'z';
            } else if (Zakodowany_tekst_Tab == alfabet[1]) {
                Zakodowany_tekst_Tab = 'y';
            } else if (Zakodowany_tekst_Tab == alfabet[2]) {
                Zakodowany_tekst_Tab = 'x';
            } else if (Zakodowany_tekst_Tab == alfabet[3]) {
                Zakodowany_tekst_Tab = 'w';
            } else if (Zakodowany_tekst_Tab == alfabet[4]) {
                Zakodowany_tekst_Tab = 'v';
            } else if (Zakodowany_tekst_Tab == alfabet[5]) {
                Zakodowany_tekst_Tab = 'u';
            } else if (Zakodowany_tekst_Tab == alfabet[6]) {
                Zakodowany_tekst_Tab = 't';
            } else if (Zakodowany_tekst_Tab == alfabet[7]) {
                Zakodowany_tekst_Tab = 's';
            } else if (Zakodowany_tekst_Tab == alfabet[8]) {
                Zakodowany_tekst_Tab = 'r';
            } else if (Zakodowany_tekst_Tab == alfabet[9]) {
                Zakodowany_tekst_Tab = 'q';
            } else if (Zakodowany_tekst_Tab == alfabet[10]) {
                Zakodowany_tekst_Tab = 'p';
            } else if (Zakodowany_tekst_Tab == alfabet[11]) {
                Zakodowany_tekst_Tab = 'o';
            } else if (Zakodowany_tekst_Tab == alfabet[12]) {
                Zakodowany_tekst_Tab = 'n';
            } else if (Zakodowany_tekst_Tab == alfabet[13]) {
                Zakodowany_tekst_Tab = 'm';
            } else if (Zakodowany_tekst_Tab == alfabet[14]) {
                Zakodowany_tekst_Tab = 'l';
            } else if (Zakodowany_tekst_Tab == alfabet[15]) {
                Zakodowany_tekst_Tab = 'k';
            } else if (Zakodowany_tekst_Tab == alfabet[16]) {
                Zakodowany_tekst_Tab = 'j';
            } else if (Zakodowany_tekst_Tab == alfabet[17]) {
                Zakodowany_tekst_Tab = 'i';
            } else if (Zakodowany_tekst_Tab == alfabet[18]) {
                Zakodowany_tekst_Tab = 'h';
            } else if (Zakodowany_tekst_Tab == alfabet[19]) {
                Zakodowany_tekst_Tab = 'g';
            } else if (Zakodowany_tekst_Tab == alfabet[20]) {
                Zakodowany_tekst_Tab = 'f';
            } else if (Zakodowany_tekst_Tab == alfabet[21]) {
                Zakodowany_tekst_Tab = 'e';
            } else if (Zakodowany_tekst_Tab == alfabet[22]) {
                Zakodowany_tekst_Tab = 'd';
            } else if (Zakodowany_tekst_Tab == alfabet[23]) {
                Zakodowany_tekst_Tab = 'c';
            } else if (Zakodowany_tekst_Tab == alfabet[24]) {
                Zakodowany_tekst_Tab = 'b';
            } else if (Zakodowany_tekst_Tab == alfabet[25]) {
                Zakodowany_tekst_Tab = 'a';
            }
            System.out.print(Zakodowany_tekst_Tab);
            String Zakodowany_text = Character.toString(Zakodowany_tekst_Tab);
            jTA_Kodowanie_Zakodowany_Tekst_Text.setText(jTA_Kodowanie_Zakodowany_Tekst_Text.getText() + Zakodowany_text); 
        }
    }//GEN-LAST:event_jB_Kodowanie_Buttons_ZakodujActionPerformed

    private void jB_Kodowanie_Buttons_ZapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Kodowanie_Buttons_ZapiszActionPerformed
        // TODO add your handling code here:
            alfabet[0] = 'a';
            alfabet[1] = 'b';
            alfabet[2] = 'c';
            alfabet[3] = 'd';
            alfabet[4] = 'e';
            alfabet[5] = 'f';
            alfabet[6] = 'g';
            alfabet[7] = 'h';
            alfabet[8] = 'i';
            alfabet[9] = 'j';
            alfabet[10] = 'k';
            alfabet[11] = 'l';
            alfabet[12] = 'm';
            alfabet[13] = 'n';
            alfabet[14] = 'o';
            alfabet[15] = 'p';
            alfabet[16] = 'q';
            alfabet[17] = 'r';
            alfabet[18] = 's';
            alfabet[19] = 't';
            alfabet[20] = 'u';
            alfabet[21] = 'v';
            alfabet[22] = 'w';
            alfabet[23] = 'x';
            alfabet[24] = 'y';
            alfabet[25] = 'z';
            
        char[] charsFromString = Zakodowany_tekst.toCharArray();
        
        for (int i = 0; i <= (Zakodowany_tekst.length() - 1); i++) {
            Zakodowany_tekst_Tab = charsFromString[i];
            
            
            if (Zakodowany_tekst_Tab == alfabet[0]) {
                Zakodowany_tekst_Tab = 'z';
            } else if (Zakodowany_tekst_Tab == alfabet[1]) {
                Zakodowany_tekst_Tab = 'y';
            } else if (Zakodowany_tekst_Tab == alfabet[2]) {
                Zakodowany_tekst_Tab = 'x';
            } else if (Zakodowany_tekst_Tab == alfabet[3]) {
                Zakodowany_tekst_Tab = 'w';
            } else if (Zakodowany_tekst_Tab == alfabet[4]) {
                Zakodowany_tekst_Tab = 'v';
            } else if (Zakodowany_tekst_Tab == alfabet[5]) {
                Zakodowany_tekst_Tab = 'u';
            } else if (Zakodowany_tekst_Tab == alfabet[6]) {
                Zakodowany_tekst_Tab = 't';
            } else if (Zakodowany_tekst_Tab == alfabet[7]) {
                Zakodowany_tekst_Tab = 's';
            } else if (Zakodowany_tekst_Tab == alfabet[8]) {
                Zakodowany_tekst_Tab = 'r';
            } else if (Zakodowany_tekst_Tab == alfabet[9]) {
                Zakodowany_tekst_Tab = 'q';
            } else if (Zakodowany_tekst_Tab == alfabet[10]) {
                Zakodowany_tekst_Tab = 'p';
            } else if (Zakodowany_tekst_Tab == alfabet[11]) {
                Zakodowany_tekst_Tab = 'o';
            } else if (Zakodowany_tekst_Tab == alfabet[12]) {
                Zakodowany_tekst_Tab = 'n';
            } else if (Zakodowany_tekst_Tab == alfabet[13]) {
                Zakodowany_tekst_Tab = 'm';
            } else if (Zakodowany_tekst_Tab == alfabet[14]) {
                Zakodowany_tekst_Tab = 'l';
            } else if (Zakodowany_tekst_Tab == alfabet[15]) {
                Zakodowany_tekst_Tab = 'k';
            } else if (Zakodowany_tekst_Tab == alfabet[16]) {
                Zakodowany_tekst_Tab = 'j';
            } else if (Zakodowany_tekst_Tab == alfabet[17]) {
                Zakodowany_tekst_Tab = 'i';
            } else if (Zakodowany_tekst_Tab == alfabet[18]) {
                Zakodowany_tekst_Tab = 'h';
            } else if (Zakodowany_tekst_Tab == alfabet[19]) {
                Zakodowany_tekst_Tab = 'g';
            } else if (Zakodowany_tekst_Tab == alfabet[20]) {
                Zakodowany_tekst_Tab = 'f';
            } else if (Zakodowany_tekst_Tab == alfabet[21]) {
                Zakodowany_tekst_Tab = 'e';
            } else if (Zakodowany_tekst_Tab == alfabet[22]) {
                Zakodowany_tekst_Tab = 'd';
            } else if (Zakodowany_tekst_Tab == alfabet[23]) {
                Zakodowany_tekst_Tab = 'c';
            } else if (Zakodowany_tekst_Tab == alfabet[24]) {
                Zakodowany_tekst_Tab = 'b';
            } else if (Zakodowany_tekst_Tab == alfabet[25]) {
                Zakodowany_tekst_Tab = 'a';
            }
            try {
                try (java.io.BufferedWriter writer = new BufferedWriter(new FileWriter(file, true))) {
                    writer.append(Zakodowany_tekst_Tab);
                    writer.close();
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Kodowanie_dekodowanie.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Kodowanie_dekodowanie.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jB_Kodowanie_Buttons_ZapiszActionPerformed

    private void jB_Dekodowanie_Buttons_WczytajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Dekodowanie_Buttons_WczytajActionPerformed
        // TODO add your handling code here:
        try {
            scanner = new Scanner(file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Kodowanie_dekodowanie.class.getName()).log(Level.SEVERE, null, ex);
        }
        while (scanner.hasNext()) {
            Zakodowany_tekst = scanner.nextLine();
            System.out.println(Zakodowany_tekst);
        }
            jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.setText(Zakodowany_tekst);
    }//GEN-LAST:event_jB_Dekodowanie_Buttons_WczytajActionPerformed

    private void jB_Dekodowanie_Buttons_OdkodujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Dekodowanie_Buttons_OdkodujActionPerformed
        // TODO add your handling code here:
        String Odkodowany_tekst = jTA_Dekodowanie_Tekst_Do_Odkodowania_Text.getText();
        
            alfabet[0] = 'a';
            alfabet[1] = 'b';
            alfabet[2] = 'c';
            alfabet[3] = 'd';
            alfabet[4] = 'e';
            alfabet[5] = 'f';
            alfabet[6] = 'g';
            alfabet[7] = 'h';
            alfabet[8] = 'i';
            alfabet[9] = 'j';
            alfabet[10] = 'k';
            alfabet[11] = 'l';
            alfabet[12] = 'm';
            alfabet[13] = 'n';
            alfabet[14] = 'o';
            alfabet[15] = 'p';
            alfabet[16] = 'q';
            alfabet[17] = 'r';
            alfabet[18] = 's';
            alfabet[19] = 't';
            alfabet[20] = 'u';
            alfabet[21] = 'v';
            alfabet[22] = 'w';
            alfabet[23] = 'x';
            alfabet[24] = 'y';
            alfabet[25] = 'z';
        
        char[] charsFromString = Odkodowany_tekst.toCharArray();
        
        for (int i = 0; i <= (Odkodowany_tekst.length() - 1); i++) {
            Odkodowany_tekst_Tab = charsFromString[i];
        
            if (Odkodowany_tekst_Tab == alfabet[0]) {
                Odkodowany_tekst_Tab = 'z';
            } else if (Odkodowany_tekst_Tab == alfabet[1]) {
                Odkodowany_tekst_Tab = 'y';
            } else if (Odkodowany_tekst_Tab == alfabet[2]) {
                Odkodowany_tekst_Tab = 'x';
            } else if (Odkodowany_tekst_Tab == alfabet[3]) {
                Odkodowany_tekst_Tab = 'w';
            } else if (Odkodowany_tekst_Tab == alfabet[4]) {
                Odkodowany_tekst_Tab = 'v';
            } else if (Odkodowany_tekst_Tab == alfabet[5]) {
                Odkodowany_tekst_Tab = 'u';
            } else if (Odkodowany_tekst_Tab == alfabet[6]) {
                Odkodowany_tekst_Tab = 't';
            } else if (Odkodowany_tekst_Tab == alfabet[7]) {
                Odkodowany_tekst_Tab = 's';
            } else if (Odkodowany_tekst_Tab == alfabet[8]) {
                Odkodowany_tekst_Tab = 'r';
            } else if (Odkodowany_tekst_Tab == alfabet[9]) {
                Odkodowany_tekst_Tab = 'q';
            } else if (Odkodowany_tekst_Tab == alfabet[10]) {
                Odkodowany_tekst_Tab = 'p';
            } else if (Odkodowany_tekst_Tab == alfabet[11]) {
                Odkodowany_tekst_Tab = 'o';
            } else if (Odkodowany_tekst_Tab == alfabet[12]) {
                Odkodowany_tekst_Tab = 'n';
            } else if (Odkodowany_tekst_Tab == alfabet[13]) {
                Odkodowany_tekst_Tab = 'm';
            } else if (Odkodowany_tekst_Tab == alfabet[14]) {
                Odkodowany_tekst_Tab = 'l';
            } else if (Odkodowany_tekst_Tab == alfabet[15]) {
                Odkodowany_tekst_Tab = 'k';
            } else if (Odkodowany_tekst_Tab == alfabet[16]) {
                Odkodowany_tekst_Tab = 'j';
            } else if (Odkodowany_tekst_Tab == alfabet[17]) {
                Odkodowany_tekst_Tab = 'i';
            } else if (Odkodowany_tekst_Tab == alfabet[18]) {
                Odkodowany_tekst_Tab = 'h';
            } else if (Odkodowany_tekst_Tab == alfabet[19]) {
                Odkodowany_tekst_Tab = 'g';
            } else if (Odkodowany_tekst_Tab == alfabet[20]) {
                Odkodowany_tekst_Tab = 'f';
            } else if (Odkodowany_tekst_Tab == alfabet[21]) {
                Odkodowany_tekst_Tab = 'e';
            } else if (Odkodowany_tekst_Tab == alfabet[22]) {
                Odkodowany_tekst_Tab = 'd';
            } else if (Odkodowany_tekst_Tab == alfabet[23]) {
                Odkodowany_tekst_Tab = 'c';
            } else if (Odkodowany_tekst_Tab == alfabet[24]) {
                Odkodowany_tekst_Tab = 'b';
            } else if (Odkodowany_tekst_Tab == alfabet[25]) {
                Odkodowany_tekst_Tab = 'a';
            }

            System.out.print(Odkodowany_tekst_Tab);
            String Odkodowany_text = Character.toString(Odkodowany_tekst_Tab);
            jTA_Dekodowanie_Odkodowany_Tekst_Text.setText(jTA_Dekodowanie_Odkodowany_Tekst_Text.getText() + Odkodowany_text); 

        }
    }//GEN-LAST:event_jB_Dekodowanie_Buttons_OdkodujActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kodowanie_dekodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kodowanie_dekodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kodowanie_dekodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kodowanie_dekodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kodowanie_dekodowanie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Dekodowanie_Buttons_Odkoduj;
    private javax.swing.JButton jB_Dekodowanie_Buttons_Wczytaj;
    private javax.swing.JButton jB_Dekodowanie_Buttons_Wyczysc2;
    private javax.swing.JButton jB_Kodowanie_Buttons_Wyczyść1;
    private javax.swing.JButton jB_Kodowanie_Buttons_Zakoduj;
    private javax.swing.JButton jB_Kodowanie_Buttons_Zapisz;
    private javax.swing.JLabel jL_Dekodowanie_Odkodowanytekst_Text;
    private javax.swing.JLabel jL_Kodowanie_Zakodowanytekst_Text;
    private javax.swing.JPanel jP_All;
    private javax.swing.JPanel jP_Dekodowanie;
    private javax.swing.JPanel jP_Dekodowanie_Buttons;
    private javax.swing.JPanel jP_Dekodowanie_Odkodowanytekst;
    private javax.swing.JPanel jP_Kodowanie;
    private javax.swing.JPanel jP_Kodowanie_Buttons;
    private javax.swing.JPanel jP_Kodowanie_Zakodowanytekst;
    private javax.swing.JScrollPane jSP_Dekodowanie_Odkodowany_Tekst;
    private javax.swing.JScrollPane jSP_Dekodowanie_Tekst_Do_Odkodowania;
    private javax.swing.JScrollPane jSP_Kodowanie_Tekst_Do_Zakodowania;
    private javax.swing.JScrollPane jSP_Kodowanie_Zakodowany_Tekst;
    private javax.swing.JTextArea jTA_Dekodowanie_Odkodowany_Tekst_Text;
    private javax.swing.JTextArea jTA_Dekodowanie_Tekst_Do_Odkodowania_Text;
    private javax.swing.JTextArea jTA_Kodowanie_Tekst_Do_Zakodowania_Text;
    private javax.swing.JTextArea jTA_Kodowanie_Zakodowany_Tekst_Text;
    private javax.swing.JTabbedPane jTB1;
    // End of variables declaration//GEN-END:variables
}
